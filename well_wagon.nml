
grf {
    grfid:                          "\c9\a2W\01";
    name:                           string(STR_GRF_NAME);
    desc:                           string(STR_GRF_DESCRIPTION);
    version:                        11;
    min_compatible_version:         10;
    url:                            string(STR_GRF_URL);

    param 0 {
        param_realistic_containers_colours {
            type:           bool;
            bit:            0;
            name:           string(STR_PARAM_RCC_NAME);
            desc:           string(STR_PARAM_RCC_DESC);
            def_value:      0;
        }
    }

    param 1 {
        param_running_cost_mult {
            type:           int;
            name:           string(STR_PARAM_RCM_NAME);
            desc:           string(STR_PARAM_RCM_DESC);
            min_value:      0;
            max_value:      9;
            def_value:      5;
            names: {
                0:          string(STR_PARAM_COST_NONE);
                1:          string(STR_PARAM_COST_BY16);
                2:          string(STR_PARAM_COST_BY8);
                3:          string(STR_PARAM_COST_BY4);
                4:          string(STR_PARAM_COST_BY2);
                5:          string(STR_PARAM_COST_DEFAULT);
                6:          string(STR_PARAM_COST_TIMES2);
                7:          string(STR_PARAM_COST_TIMES4);
                8:          string(STR_PARAM_COST_TIMES8);
                9:          string(STR_PARAM_COST_TIMES16);
            };
        }
    }

    param 2 {
        param_purchase_cost_mult {
            type:           int;
            name:           string(STR_PARAM_PCM_NAME);
            desc:           string(STR_PARAM_PCM_DESC);
            min_value:      0;
            max_value:      9;
            def_value:      5;
            names: {
                0:          string(STR_PARAM_COST_NONE);
                1:          string(STR_PARAM_COST_BY16);
                2:          string(STR_PARAM_COST_BY8);
                3:          string(STR_PARAM_COST_BY4);
                4:          string(STR_PARAM_COST_BY2);
                5:          string(STR_PARAM_COST_DEFAULT);
                6:          string(STR_PARAM_COST_TIMES2);
                7:          string(STR_PARAM_COST_TIMES4);
                8:          string(STR_PARAM_COST_TIMES8);
                9:          string(STR_PARAM_COST_TIMES16);
            };
        }
    }
}

railtypetable {
    RAIL, ELRL, MONO, MGLV
}

cargotable {
    STEL, OIL_
}

/* - - - - - - - - - - - - - - - - - */
/*            Sprite Set             */
/* - - - - - - - - - - - - - - - - - */

template tmpl_railwagon_4(x, y) {
    [128 * x + 0,   32 * y,  8,  28, -3,     -16]
    [128 * x + 16,  32 * y,  22, 24, -14,    -16]
    [128 * x + 48,  32 * y,  32, 20, -16,    -16]
    [128 * x + 96,  32 * y,  22, 24, -6,     -16]
}

template tmpl_railwagon_8f(x, y) {
    tmpl_railwagon_4(x, y)
    tmpl_railwagon_4(x, y + 2)
}

template tmpl_railwagon_8l(x, y) {
    tmpl_railwagon_4(x, y + 2)
    tmpl_railwagon_4(x, y)
}

spriteset (set_wellwagon_first_empty,       "gfx/well_wagon_empty.png") { tmpl_railwagon_8f( 0, 0 ) }
spriteset (set_wellwagon_middle_empty,      "gfx/well_wagon_empty.png") { tmpl_railwagon_4(  0, 1 ) }
spriteset (set_wellwagon_last_empty,        "gfx/well_wagon_empty.png") { tmpl_railwagon_8l( 0, 0 ) }

spriteset (set_wellwagon_first_container_1,  "gfx/well_wagon_container_full.png") { tmpl_railwagon_8f( 0, 0 ) }
spriteset (set_wellwagon_middle_container_1, "gfx/well_wagon_container_full.png") { tmpl_railwagon_4(  0, 1 ) }
spriteset (set_wellwagon_last_container_1,   "gfx/well_wagon_container_full.png") { tmpl_railwagon_8l( 0, 0 ) }
spriteset (set_wellwagon_first_container_2,  "gfx/well_wagon_container_full.png") { tmpl_railwagon_8f( 1, 0 ) }
spriteset (set_wellwagon_middle_container_2, "gfx/well_wagon_container_full.png") { tmpl_railwagon_4(  1, 1 ) }
spriteset (set_wellwagon_last_container_2,   "gfx/well_wagon_container_full.png") { tmpl_railwagon_8l( 1, 0 ) }

spriteset (set_wellwagon_purchase,          "gfx/well_wagon_purchase.png") { 
    [0, 0,  53, 14, -25,    -10] 
}

spritegroup setgroup_wellwagon_container_first {
    loaded:  [set_wellwagon_first_empty, set_wellwagon_first_container_1, set_wellwagon_first_container_2];
    loading: [set_wellwagon_first_empty, set_wellwagon_first_container_1, set_wellwagon_first_container_2];
}

spritegroup setgroup_wellwagon_container_middle {
    loaded:  [set_wellwagon_middle_empty, set_wellwagon_middle_container_1, set_wellwagon_middle_container_2];
    loading: [set_wellwagon_middle_empty, set_wellwagon_middle_container_1, set_wellwagon_middle_container_2];
}

spritegroup setgroup_wellwagon_container_last {
    loaded:  [set_wellwagon_last_empty, set_wellwagon_last_container_1, set_wellwagon_last_container_2];
    loading: [set_wellwagon_last_empty, set_wellwagon_last_container_1, set_wellwagon_last_container_2];
}

/* - - - - - - - - - - - - - - - - - */
/*             Switches              */
/* - - - - - - - - - - - - - - - - - */

random_switch (FEAT_TRAINS, SELF, sw_wellwagon_random_colour_1, bitmask(TRIGGER_VEHICLE_NEW_LOAD)) {
    5: return COLOUR_DARK_BLUE;
    2: return COLOUR_PALE_GREEN;
    3: return COLOUR_YELLOW;
    12: return COLOUR_RED;
    4: return COLOUR_LIGHT_BLUE;
    2: return COLOUR_GREEN;
    2: return COLOUR_DARK_GREEN;
    4: return COLOUR_BLUE;
    6: return COLOUR_CREAM;
    5: return COLOUR_MAUVE;
    3: return COLOUR_ORANGE;
    8: return COLOUR_GREY;
    8: return COLOUR_WHITE;
}

random_switch (FEAT_TRAINS, SELF, sw_wellwagon_random_colour_2, bitmask(TRIGGER_VEHICLE_NEW_LOAD)) {
    independent: sw_wellwagon_random_colour_1;
    5: return COLOUR_DARK_BLUE;
    2: return COLOUR_PALE_GREEN;
    3: return COLOUR_YELLOW;
    12: return COLOUR_RED;
    4: return COLOUR_LIGHT_BLUE;
    2: return COLOUR_GREEN;
    2: return COLOUR_DARK_GREEN;
    4: return COLOUR_BLUE;
    6: return COLOUR_CREAM;
    5: return COLOUR_MAUVE;
    3: return COLOUR_ORANGE;
    8: return COLOUR_GREY;
    8: return COLOUR_WHITE;
}

random_switch (FEAT_TRAINS, SELF, sw_wellwagon_random_colour_3, bitmask(TRIGGER_VEHICLE_NEW_LOAD)) {
    1: return COLOUR_DARK_BLUE;
    1: return COLOUR_PALE_GREEN;
    1: return COLOUR_PINK;
    1: return COLOUR_YELLOW;
    1: return COLOUR_RED;
    1: return COLOUR_LIGHT_BLUE;
    1: return COLOUR_GREEN;
    1: return COLOUR_DARK_GREEN;
    1: return COLOUR_BLUE;
    1: return COLOUR_CREAM;
    1: return COLOUR_MAUVE;
    1: return COLOUR_PURPLE;
    1: return COLOUR_ORANGE;
    1: return COLOUR_BROWN;
    1: return COLOUR_GREY;
    1: return COLOUR_WHITE;
}

random_switch (FEAT_TRAINS, SELF, sw_wellwagon_random_colour_4, bitmask(TRIGGER_VEHICLE_NEW_LOAD)) {
    independent: sw_wellwagon_random_colour_3;
    1: return COLOUR_DARK_BLUE;
    1: return COLOUR_PALE_GREEN;
    1: return COLOUR_PINK;
    1: return COLOUR_YELLOW;
    1: return COLOUR_RED;
    1: return COLOUR_LIGHT_BLUE;
    1: return COLOUR_GREEN;
    1: return COLOUR_DARK_GREEN;
    1: return COLOUR_BLUE;
    1: return COLOUR_CREAM;
    1: return COLOUR_MAUVE;
    1: return COLOUR_PURPLE;
    1: return COLOUR_ORANGE;
    1: return COLOUR_BROWN;
    1: return COLOUR_GREY;
    1: return COLOUR_WHITE;
}

switch (FEAT_TRAINS, SELF, sw_wellwagon_random_param_13, param[0]) {
    0: sw_wellwagon_random_colour_3;
    sw_wellwagon_random_colour_1;
}

switch (FEAT_TRAINS, SELF, sw_wellwagon_random_param_24, param[0]) {
    0: sw_wellwagon_random_colour_4;
    sw_wellwagon_random_colour_2;
}

switch (FEAT_TRAINS, SELF, sw_wellwagon_cargo_capacity, cargo_type_in_veh) {
    STEL:   return 40;
    OIL_:   return 80;
    return  60;
}

switch (FEAT_TRAINS, SELF, sw_wellwagon_articulated_part, extra_callback_info1) {
    1..2: return item_rail_wellwagon;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch (FEAT_TRAINS, SELF, sw_setgroup_wellwagon_first, cargo_type_in_veh) {
    setgroup_wellwagon_container_first;
}

switch (FEAT_TRAINS, SELF, sw_setgroup_wellwagon_middle, cargo_type_in_veh) {
    setgroup_wellwagon_container_middle;
}

switch (FEAT_TRAINS, SELF, sw_setgroup_wellwagon_last, cargo_type_in_veh) {
    setgroup_wellwagon_container_last;
}

switch (FEAT_TRAINS, SELF, sw_wellwagon_setgroup_pos, position_in_articulated_veh) {
    1: sw_setgroup_wellwagon_middle;
    2: sw_setgroup_wellwagon_last;
    sw_setgroup_wellwagon_first;
}

switch (FEAT_TRAINS, SELF, sw_purchase_cost_factor, param[2]) {
    0: return 0;
    1..4: return 650 >> (5 - param[2]);
    return 650 << (param[2] - 5);
}

switch (FEAT_TRAINS, SELF, sw_running_cost_factor, param[1]) {
    0: return 0;
    1..4: return 16 >> (5 - param[1]);
    return 16 << (param[1] - 5);    
}


/* - - - - - - - - - - - - - - - - - */
/*            Well Wagon             */
/* - - - - - - - - - - - - - - - - - */

item(FEAT_TRAINS, item_rail_wellwagon) {
    property {
        name:                           string(STR_WELLWAGON_NAME);
        climates_available:             ALL_CLIMATES;
        introduction_date:              date(1990, 1, 1);
        model_life:                     VEHICLE_NEVER_EXPIRES;
        vehicle_life:                   30;
        reliability_decay:              20;
        refittable_cargo_classes:       ALL_NORMAL_CARGO_CLASSES & ~bitmask(CC_PASSENGERS, CC_MAIL);
        non_refittable_cargo_classes:   bitmask();
        loading_speed:                  10;
        cost_factor:                    0;
        running_cost_factor:            0;
        sprite_id:                      SPRITE_ID_NEW_TRAIN;
        speed:                          141 km/h;
        misc_flags:                     bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_AUTOREFIT);
        refit_cost:                     0;
        track_type:                     RAIL;
        ai_special_flag:                AI_FLAG_CARGO;
        power:                          0;
        running_cost_base:              return (param[1] == 0) ? RUNNING_COST_NONE : RUNNING_COST_STEAM;
        cargo_capacity:                 60;
        weight:                         60;
        bitmask_vehicle_info:           0;
    }

    graphics {
        cargo_capacity:                 sw_wellwagon_cargo_capacity;
        colour_mapping:                 palette_2cc(sw_wellwagon_random_param_13(), sw_wellwagon_random_param_24());
        random_trigger:                 palette_2cc(sw_wellwagon_random_param_13(), sw_wellwagon_random_param_24());
        articulated_part:               sw_wellwagon_articulated_part;
        default:                        sw_wellwagon_setgroup_pos;
        purchase:                       set_wellwagon_purchase;
        cost_factor:                    sw_purchase_cost_factor;
        running_cost_factor:            sw_running_cost_factor;
    }
}

